#!/bin/bash -e
esp_path="/efi/BOOT/Arch"
current_img="${esp_path}/linux-signed.efi"
backup_img="${esp_path}/linux-signed-bkp.efi"
#always force directory creation
mkdir -p $esp_path

kernels=()
dracut_update=0

while read -r line; do
    if [[ $line != 'usr/lib/modules/'+([^/])'/pkgbase' ]]; then
		dracut_update=1 # Dracut files have been updated
        continue 
    fi

    read -r pkgbase < "/${line}"
	kernels+=("${pkgbase}")
done

if (( dracut_update )); then
	kernels=()
	for file in /lib/modules/*/pkgbase; do
		if read -r pkgbase &> /dev/null < "$file"; then
			kernels+=("${pkgbase}")
		fi
	done
fi

for kernel in "${kernels[@]}"; do
	path="$(grep -lE "^${kernel}\$" /usr/lib/modules/*/pkgbase)"
	version=$(basename "${path%/pkgbase}")
    read -r pkgbase < "$path"

    echo "Backing up current image(if it exists)"
    if [[ -f ${current_img} ]]; then
        cp -f ${current_img} ${backup_img}
    fi

    echo "Building linux image $kernel ($version)"
    dracut -q -f -v --kver "${version}" ${current_img}
    echo "Showing available EFI entries"
    efibootmgr -v
done
